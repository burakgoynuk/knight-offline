//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : 443-Hw1
//  @ File Name : Mage.java
//  @ Date : 08.04.2015
//  @ Author : Burak Goynuk
//
//

//package pkg443.hw1;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.RenderingHints;
import javax.swing.Timer;


public class Mage extends BasicKnight {
    
	public Mage( int iHitPoint, Timer iCoolDown, int iScore, double iXPos, double iYPos, double iSpeed, int iHealth, int iNormalAttack, int iSpecAttack, Simulation iSimulation ) {
            super( iHitPoint, iCoolDown, iScore, iXPos, iYPos, iSpeed, iHealth, iNormalAttack, iSpecAttack, iSimulation  );
            
            
            int strategyChoice = Simulation.random.nextInt(4);
            if ( strategyChoice == 0 )
            {
                strategy = new AttackClosest(this);
            }
            else if ( strategyChoice == 1 )
            {
                strategy = new AttackWeakest(this);
            }
            else if ( strategyChoice == 2 )
            {
                strategy = new RandomMove();
            }
            else if ( strategyChoice == 3 )
            {
                strategy = new AttackSlowest(this);
            }
            else{
            
            }
            
        }
	
	public void draw(Graphics g) {
           
            Graphics2D g2d = (Graphics2D) g;
        
            int[] xCoords = {(int)xPos + 20, (int)xPos, (int)xPos - 20, (int)xPos}      ;
            int[] yCoords = {(int)yPos, (int)yPos - 20, (int)yPos, (int)yPos + 20} ;

            Polygon poly = new Polygon(xCoords, yCoords, 4);

            g2d.setColor(colorKnight);
            g2d.drawPolygon(poly)   ;
            g2d.fillPolygon(poly)   ;

            //int fontSize                    =       15 ;

            Font defaultFont 		= 	g2d.getFont()                     		;  
            Font newFont     		= 	new Font("Times New Roman", Font.BOLD, 13 ) 	;
            g2d.setFont(newFont) 									;
            FontMetrics fm 			= 	g2d.getFontMetrics()                            ;
            g2d.setPaint( Color.WHITE ) 							;
            String temp 			= 	Integer.toString( health ) 		;
            g2d.drawString( temp, (int) (xPos) - 12, (int) ( yPos ) + 7)               ;  
            g2d.setFont( defaultFont ) 								; 
            
            if ( attackType == 2 )
            {
                g2d.setColor(colorKnight);
                g2d.setStroke(new BasicStroke(2));
                g2d.drawOval( (int)xPos-45, (int)yPos-45, 100, 100);


            }
            else if ( attackType == 1 )
            {
                g2d.setColor(colorKnight);
                g2d.setStroke(new BasicStroke(3));
                if ( colorKnight == Color.RED )
                {
                    // x, y, x+50, y-50
                    g2d.drawLine( (int)xPos,(int)yPos, (int)xPos+50,(int)yPos-50);
                }    

                else
                {
                    // x, y, x-50, y+50
                    g2d.drawLine( (int)xPos,(int)yPos, (int)xPos-50,(int)yPos+50);
                }    

            }
            attackType = 0;

        }
        
        @Override
        public void doSpecAttack(){
            
            Knight target;
            int resultAttack = 0;
            if (this.colorKnight == Color.RED) // KAURUS!
            {
                for ( int i=0; i<simulation.elMoradList.size(); i++ )
                {
                    target = simulation.elMoradList.get(i);
                    if ( target != null )
                    {
                        resultAttack = rangedAttack( target, 100, 75 );
                    }    
                }    
            }
            else
            {
                for ( int i=0; i<simulation.kaurusList.size(); i++ )
                {
                    target = simulation.kaurusList.get(i);
                    if ( target != null )
                        resultAttack = rangedAttack( target, 100, 75 );
                } 
            }
            //resultAttack = 1;
            if ( resultAttack == 1 )
                attackType = 2;
        }
        
        
        @Override
        public void doNormAttack(){
            Knight target = this.strategy.targetToAttack;
            int resultAttack = 0;
            //System.out.println("Normal Attack Mage!");
            if ( target != null ){
                resultAttack = rangedAttack( target, 75, 100 );
            }
            //resultAttack = 1;
            if ( resultAttack == 1 )
                attackType = 1;
        
        
        }
	
}
