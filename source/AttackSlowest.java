//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : 443-Hw1
//  @ File Name : AttackNemesis.java
//  @ Date : 08.04.2015
//  @ Author : Burak Goynuk
//
//
//package pkg443.hw1;

import java.awt.Color;



public class AttackSlowest extends Strategy {
    Simulation simulation;
    int targetIndex = 1;
    public AttackSlowest(Knight k) {
	Knight k2;
        int returnIndex = -1;
        double minSpeed = 9999999;
        double tempSpeed = 99999999;


        if ( k.colorKnight == Color.RED )
        {
            for (int i=0; i< simulation.elMoradList.size(); i++)
            {
                k2 = simulation.elMoradList.get(i);
                tempSpeed = k2.speed;
                if ( tempSpeed < minSpeed )
                {
                    minSpeed = tempSpeed;
                    returnIndex = i;
                }    
            }   
        }

        else if ( k.colorKnight == Color.BLUE )
        {
            for (int i=0; i< simulation.kaurusList.size(); i++)
            {
                k2 = simulation.kaurusList.get(i);
                tempSpeed = k2.speed;
                if ( tempSpeed < minSpeed )
                {
                    minSpeed = tempSpeed;
                    returnIndex = i;
                }    
            }

        }
        
        if ( returnIndex != -1 )
            targetIndex = returnIndex;
    }
	
    public void step(Knight k, double deltaTime) {
        //int targetIndex = slowestIndex(k);
        double targetX = 0;
        double targetY = 0;

        //System.out.println("Slowest: " + targetIndex);
        if ( targetIndex != -1 )
        {
            if ( k.colorKnight == Color.RED )
            {
                targetToAttack =  simulation.elMoradList.get(targetIndex);
                targetX = simulation.elMoradList.get(targetIndex).xPos;
                targetY = simulation.elMoradList.get(targetIndex).yPos;
               // System.out.println("Speed: " + simulation.elMoradList.get(targetIndex).speed);
            }
            else if ( k.colorKnight == Color.BLUE )
            {
                targetToAttack =  simulation.kaurusList.get(targetIndex);
                targetX = simulation.kaurusList.get(targetIndex).xPos;
                targetY = simulation.kaurusList.get(targetIndex).yPos;
              //  System.out.println("Speed: " + simulation.kaurusList.get(targetIndex).speed);
            }

            
            Strategy.moveKnight(k, targetX, targetY, deltaTime);

        }
        else
        {
            // TARGET NOT FOUND!


        }
    }

}
