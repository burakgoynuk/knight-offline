//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : 443-Hw1
//  @ File Name : Rogue.java
//  @ Date : 08.04.2015
//  @ Author : Burak Goynuk
//
//

//package pkg443.hw1;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.RenderingHints;
import javax.swing.Timer;


public class Rogue extends BasicKnight {
	public Rogue( int iHitPoint, Timer iCoolDown, int iScore, double iXPos, double iYPos, double iSpeed, int iHealth, int iNormalAttack, int iSpecAttack, Simulation iSimulation  ) {
           super( iHitPoint, iCoolDown, iScore, iXPos, iYPos, iSpeed, iHealth, iNormalAttack, iSpecAttack, iSimulation  );
	
           int strategyChoice = Simulation.random.nextInt(4);
            if ( strategyChoice == 0 )
            {
                strategy = new AttackClosest(this);
            }
            else if ( strategyChoice == 1 )
            {
                strategy = new AttackWeakest(this);
            }
            else if ( strategyChoice == 2 )
            {
                strategy = new RandomMove();
            }
            else if ( strategyChoice == 3 )
            {
                strategy = new AttackSlowest(this);
            }
            else{
            
            }
        
        }
	
	public void draw(Graphics g) {
            
            
            
            Graphics2D g2d = (Graphics2D) g;

            int[] xCoords = {(int)this.xPos - 20, (int)this.xPos, (int)this.xPos + 20}       ;
            int[] yCoords = {(int)this.yPos - 11, (int)this.yPos + 20, (int)this.yPos - 11}  ;

            Polygon poly = new Polygon(xCoords, yCoords, 3);

            g2d.setColor(this.colorKnight);
            g2d.drawPolygon(poly)   ;
            g2d.fillPolygon(poly)   ;

            //int fontSize                    =       13 ;

            Font defaultFont 		= 	g2d.getFont()                     		;  
            Font newFont     		= 	new Font("Times New Roman", Font.BOLD, 13 ) 	;
            g2d.setFont(newFont) 									;
            FontMetrics fm 			= 	g2d.getFontMetrics()                            ;
            g2d.setPaint( Color.WHITE ) 							;
            String temp 			= 	Integer.toString( this.health ) 		;
            g2d.drawString( temp, (int) (this.xPos) - 10, (int) ( this.yPos) + 5 )                ;
            g2d.setFont( defaultFont )     ;
            
            if ( attackType == 2 )
            {
                g2d.setColor(colorKnight);
                g2d.setStroke(new BasicStroke(2));
                g2d.drawOval( (int)xPos-45, (int)yPos-45, 100, 100);


            }
            else if ( attackType == 1 )
            {
                g2d.setColor(colorKnight);
                g2d.setStroke(new BasicStroke(3));
                if ( colorKnight == Color.RED )
                {
                    g2d.drawLine( (int)xPos,(int)yPos, (int)xPos+50, (int)yPos-50);
                    //g2d.drawLine( (int)xPos,(int)yPos, (int)strategy.targetToAttack.xPos, (int)strategy.targetToAttack.yPos);
                }    

                else
                {
                    g2d.drawLine( (int)xPos,(int)yPos, (int)xPos-50, (int)yPos+50);
                    //g2d.drawLine( (int)xPos,(int)yPos, (int)strategy.targetToAttack.xPos, (int)strategy.targetToAttack.yPos);
                }    

            }
            attackType = 0;
	}
        
        @Override
        public void doSpecAttack(){
            double initialSpeed = speed;
            int resultAttack = 0;
            speed = speed * 2; 
            Knight target = this.strategy.targetToAttack;
            
            if ( target != null ){
                resultAttack = rangedAttack( target, 200,250 );
            }
            speed = initialSpeed;
            if ( resultAttack == 1 )
                attackType = 2;
        
        }
        
        
        @Override
        public void doNormAttack(){
            Knight target = this.strategy.targetToAttack;
            int resultAttack = 0;
            if ( target != null ){
                resultAttack = meleeAttack( target, 150 );
            }
            if ( resultAttack == 1 )
                attackType = 1;

        }
}
